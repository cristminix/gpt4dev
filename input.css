@import "tailwindcss";
@import "preline/variants.css";

/* Preline UI */
@custom-variant dark (&:where(.dark, .dark *));

/* Plugins */
/* @plugin "@tailwindcss/forms"; */
@plugin "@tailwindcss/typography";
@source "./node_modules/preline/dist/*.js";


  /**/

  .conversation-item-button.active{
    @apply bg-gray-100 dark:bg-gray-700
  }

  .inner-content a>img{
    /* font-family: Inter; */
    /* font-size: 1em; */
    /* @apply border rounded-lg w-full cover */
  }
  .codemirror-wrapper{
    font-size: 1.095em;
    line-height: 1.2em;
  }
  .inner-content table{
    @apply min-w-full divide-y divide-gray-200 dark:divide-neutral-700 p-4 border border-gray-200 dark:border-neutral-700 rounded-lg
  }
  .inner-content table > thead > tr > th{
    @apply px-6 py-3 text-start text-xs font-medium text-gray-500 uppercase dark:text-neutral-500
  }
  .inner-content table > tbody > tr > td{
    @apply px-6 py-4  text-sm font-medium text-gray-800 dark:text-neutral-400 text-left
  }
  .inner-content table > tbody {
    @apply divide-y divide-gray-200 dark:divide-neutral-700
  }

.provider-option{
  @apply min-w-[450px]
}
.model-container-parent{
  @apply flex  gap-2 w-[500px]
}
.conversation-list .conversation-item .inner-content  *:first{
  @apply !p-0 !m-0 !border-0 !bg-transparent
}
.conversation-list .conversation-item .inner-content{
@apply  !overflow-x-hidden !max-w-none prose dark:prose-invert prose-headings:font-semibold prose-headings:text-gray-800 dark:prose-headings:text-neutral-400 prose-p:text-neutral-400 dark:prose-p:text-neutral-300 prose-a:text-blue-600 dark:prose-a:text-blue-400 prose-a:no-underline hover:prose-a:underline
}
.chat-toolbar-left{
  @apply border-r border-gray-200 dark:border-neutral-700
}
.chat-toolbar-left button.active{
  @apply !border
}

#hs-editor-tiptap-blockquote-alt .tiptap{
  /* font-family: Inter; */
  @apply !py-4;
  font-size: 16px !important; 
  line-height: .5m;
}

 :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    border-color: var(--tw-prose-hr);
    border-top-width: 1;
    margin-top: .25em !important;
    margin-bottom: .25em !important;
    display: none;
  }
  .conversation-list .conversation-item .inner-content {
    :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 2em;
        margin-bottom: 2em;
        @apply w-full;
    }
}

.conversation-list .conversation-item .inner-content {
    :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding: 1em;
        vertical-align: middle !important;
    }
}

.conversation-list .conversation-item .inner-content {
    :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *))
 {
        padding-inline-start: 1em;
    }
}

.conversation-list .conversation-item .inner-content {
    :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0em;
        margin-bottom: 0em;
    }
}

.conversation-list .conversation-item .inner-content {
    :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0em; 
        margin-bottom: 0em;
    }
}

.conversation-list .conversation-item .inner-content {
    :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0em;
        margin-bottom: 0em;
    }
}
.conversation-list .conversation-item .inner-content {
    :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      
        margin-top: .25em;
        margin-bottom: .25em;
    }
}

.conversation-list .conversation-item .inner-content {
    :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        
        margin-top: .25em;
        margin-bottom: .25em;
    }
}
@layer utilities {
  @keyframes blink {
    0%, 100% { opacity: 1; }
    50% { opacity: 0; }
  }
  .animate-blink {
    animation: blink 1s infinite;
  }
}

.conversation-list .conversation-item .inner-content {
    :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *))
 {
        color: var(--tw-prose-pre-code);
        background-color: transparent;
        overflow-x: auto;
        /* font-weight: 400; */
        font-size: 14px !important;
        /* line-height: auto; */
        margin-top: 1.7142857em;
        margin-bottom: 1.7142857em;
        border-radius: 0;
        padding-top: 0;
        padding-inline-end: 0;
        padding-bottom: 0;
        padding-inline-start: 0;

        @apply  [&::-webkit-scrollbar]:h-2 [&::-webkit-scrollbar]:w-2 [&::-webkit-scrollbar-thumb]:rounded-full [&::-webkit-scrollbar-track]:bg-gray-100 [&::-webkit-scrollbar-thumb]:bg-gray-300 dark:[&::-webkit-scrollbar-track]:bg-neutral-700 dark:[&::-webkit-scrollbar-thumb]:bg-neutral-500;
    }
}
.nice-scrollbar{
        @apply  [&::-webkit-scrollbar]:h-2 [&::-webkit-scrollbar]:w-2 [&::-webkit-scrollbar-thumb]:rounded-full [&::-webkit-scrollbar-track]:bg-gray-100 [&::-webkit-scrollbar-thumb]:bg-gray-300 dark:[&::-webkit-scrollbar-track]:bg-neutral-700 dark:[&::-webkit-scrollbar-thumb]:bg-neutral-500;

}
.conversation-list .conversation-item .inner-content {
    :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        @apply !w-full ;
    }
}
.conversation-list .conversation-item .inner-content {
    :where(blockquote p:first-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
        content: none;
    }
    
}
.conversation-list .conversation-item .inner-content {
    :where(blockquote p:first-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
        content: none;
    }
    
}

.galery-grid{
  @apply grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-x-1 gap-y-2 px-0;

}

.galery-grid > .galery-item{
  @apply list-none block ;
}
.galery-grid > .galery-item  p a {
  @apply hidden;
}
.galery-grid > .galery-item  p  img{
  @apply !m-0 !p-0 cursor-pointer shadow-md;
}
